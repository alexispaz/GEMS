#  gms file
#  
#    ___________________   _____    _________
#   /  _____/\_   _____/  /     \  /   _____/
#  /   \  ___ |    __)_  /  \ /  \ \_____  \
#  \    \_\  \|        \/    Y    \/        \
#   \______  /_______  /\____|__  /_______  /
#          \/        \/         \/         \/
#        is an Extensible Molecular Simulator
#  
#  Copyright (C) 2020 Sergio Alexis Paz
#  This program comes with ABSOLUTELY NO WARRANTY; for details type `warranty`.
#  This is free software, and you are welcome to redistribute it
#  under certain conditions; type `license` for details.
#  
#  Version:eea5-dirty
#  I/O Units:
#    -input: bloques.gms
#    -log:   bloques.log
#    -chp:   bloques.chp
#  MPI: Not compiled for MPI
#  OpenMP: Using 4 threads
#-WAN-> F2003 standar do not specify PRNG implementation, so this is a compiler dependent choice.
#  Random Seed: 
#    502067135
#    299688736
#    1143573079
#    55175885
#    366921879
#    1133710388
#    1206100884
#    -1905503571
# Input script for GeMS

bloque repeat 12
  print {2*$i$}
fin
#-STD->  >>> iterando: $i$=01
# 2.0000000000000000
#-STD->  >>> iterando: $i$=02
# 4.0000000000000000
#-STD->  >>> iterando: $i$=03
# 6.0000000000000000
#-STD->  >>> iterando: $i$=04
# 8.0000000000000000
#-STD->  >>> iterando: $i$=05
# 10.000000000000000
#-STD->  >>> iterando: $i$=06
# 12.000000000000000
#-STD->  >>> iterando: $i$=07
# 14.000000000000000
#-STD->  >>> iterando: $i$=08
# 16.000000000000000
#-STD->  >>> iterando: $i$=09
# 18.000000000000000
#-STD->  >>> iterando: $i$=10
# 20.000000000000000
#-STD->  >>> iterando: $i$=11
# 22.000000000000000
#-STD->  >>> iterando: $i$=12
# 24.000000000000000

bloque save 1
   print hola
fin

bloque save 2
   print dm_steps
fin

bloque load 1
# hola

box size 5.78 5.78 5.78

>< atom 1 1 1
#-STD->            1 particles in creation
#-STD->            1 particles selected
+< atom 2.2 1 1
#-STD->            2 particles in creation
#-STD->            2 particles selected
# m0=1uma
sys add H
#-STD->            2 particles in the system 

> sys
#-STD->            2 particles selected
set pbc F F F
set mass 3.
group 1 add
#-STD->            2 particles in group           1

interact 1 under lj 1. 0.890898718140339 2
#-STD-> The interaction label is :i1
# NHB Not using linked cells since it would involve less than 4 cells.
# NHB  -cut radious:    2.00000

getin tau_ps 0.01018
#-STD-> tau_ps = 0.01018
time step {0.002*$tau_ps$}   (integration timestep [ps])

> sys
#-STD->            2 particles selected
evolve ermak 100 1
#-STD-> The algorithm label is :1
# REF This feature use the following references:
# REF - D. L. Ermak and H. Buckholz, “Numerical integration of the Langevin equation:
# REF   Monte Carlo simulation”, J. Comput. Phys. 35, 169 (1980)
# REF - M. P. Allen and D. J. Tildesley, "Computer simulation of liquids" Chap 9, "Brownian Dinamics", Pag 263
# REF - I. Snook, "The ermak and Generalised Langevin Apprroach to the Dynamics of
# REF   Atomic, Polymeric and Colloidal System". Elsevier, Sec 6.2.4 "A
# REF   third first-order BD algorithm", Pag 118.
evolve :1 v_verlet
bloque load_each 3 2
dinamica 6
#-STD-> 1 steps reached!
#-STD-> 1neigh searches
#-STD-> average wall time per step:      0.003 s
#-STD->       0.00ps simulated!
#-STD-> average wall time per ns: 40 h 55 m
#  0.30000000E+01
#  0.60000000E+01
#-STD-> cpu time:      0.024 s
#-STD-> wall time:      0.004 s
#-STD-> vecinos actualizados: 1 veces

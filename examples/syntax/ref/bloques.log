#  gms file
#  
#    ___________________   _____    _________
#   /  _____/\_   _____/  /     \  /   _____/
#  /   \  ___ |    __)_  /  \ /  \ \_____  \
#  \    \_\  \|        \/    Y    \/        \
#   \______  /_______  /\____|__  /_______  /
#          \/        \/         \/         \/
#        is an Extensible Molecular Simulator
#  
#  Copyright (C) 2020 Sergio Alexis Paz
#  This program comes with ABSOLUTELY NO WARRANTY; for details type `warranty`.
#  This is free software, and you are welcome to redistribute it
#  under certain conditions; type `license` for details.
#  
#  Version:0149-dirty
#  I/O Units:
#    -input: bloques.gms
#    -log:   bloques.log
#    -chp:   bloques.chp
#  MPI: Not compiled for MPI
#  OpenMP: Using 8 threads
#-WAN-> F2003 standar do not specify PRNG implementation, so this is a compiler dependent choice.
#  Random Seed: 
#    2141572081
#    2136675069
#    227326333
#    -888092350
#    1300483361
#    3672730
#    -935759922
#    -842415431
# Input script for GEMS

# Testing blocks
bloque repeat 12
  print {2*$i$}
fin
#-STD->  >>> iterando: $i$=0
# 2.0000000000000000
#-STD->  >>> iterando: $i$=0
# 4.0000000000000000
#-STD->  >>> iterando: $i$=0
# 6.0000000000000000
#-STD->  >>> iterando: $i$=0
# 8.0000000000000000
#-STD->  >>> iterando: $i$=0
# 10.000000000000000
#-STD->  >>> iterando: $i$=0
# 12.000000000000000
#-STD->  >>> iterando: $i$=0
# 14.000000000000000
#-STD->  >>> iterando: $i$=0
# 16.000000000000000
#-STD->  >>> iterando: $i$=0
# 18.000000000000000
#-STD->  >>> iterando: $i$=10
# 20.000000000000000
#-STD->  >>> iterando: $i$=11
# 22.000000000000000
#-STD->  >>> iterando: $i$=12
# 24.000000000000000

bloque save 1
   print hola
fin

bloque save 2
   print dm_steps
fin

bloque load 1
# hola

# Define a sistem
box size 5.78 5.78 5.78

>< atom 1 1 1
#-STD->            1 particles in system
#-STD->            1 particles selected
+< atom 2.2 1 1
#-STD->            2 particles in system
#-STD->            2 particles selected
# m0=1uma
set element H

> sys
#-STD->            2 particles selected
set pbc F F F
set mass 3.
group 1 add
#-STD->            2 particles in group           1

# Get variables
> atom 1
#-STD->            1 particles selected
getin x1 cm_pos
#-STD-> x1[1] = 1.000000
#-STD-> x1[2] = 1.000000
#-STD-> x1[3] = 1.000000
> atom 2
#-STD->            1 particles selected
getin x2 cm_pos
#-STD-> x2[1] = 2.200000
#-STD-> x2[2] = 1.000000
#-STD-> x2[3] = 1.000000

# Testing interaction commands
interact 1 pair lj 1. 0.890898718140339 2
#-STD-> The interaction label is :i1
# NHB Not using linked cells since it would involve less than 4 cells.
# NHB  -cut radious:    2.00000

# Testing math
tau_ps:=0.01018
time step {0.002*$tau_ps$}   (integration timestep [ps])

# Testing evolve commands
> sys
#-STD->            2 particles selected
evolve ermak 100 1
#-STD-> The algorithm label is :1
# REF This feature use the following references:
# REF - D. L. Ermak and H. Buckholz, “Numerical integration of the Langevin equation:
# REF   Monte Carlo simulation”, J. Comput. Phys. 35, 169 (1980)
# REF - M. P. Allen and D. J. Tildesley, "Computer simulation of liquids" Chap 9, "Brownian Dinamics", Pag 263
# REF - I. Snook, "The ermak and Generalised Langevin Apprroach to the Dynamics of
# REF   Atomic, Polymeric and Colloidal System". Elsevier, Sec 6.2.4 "A
# REF   third first-order BD algorithm", Pag 118.
evolve :1 v_verlet
bloque load_each 3 2
dinamica 6
#-STD-> 1 steps reached!
#-STD-> 1neigh searches
#-STD-> average wall time per step:      0.000 s
#-STD->       0.00ps simulated!
#-STD-> average wall time per ns:      0.000 s
# 3.000000
# 6.000000

# Print properties
> atom 1
#-STD->            1 particles selected
print cm_pos
# 1.000053
# 1.000000
# 1.000000
> atom 2
#-STD->            1 particles selected
print cm_pos
# 2.199947
# 1.000000
# 1.000000

# Testing set/get
> atom 1
#-STD->            1 particles selected
set cm_pos $x1[1] $x1[2] $x1[3]
print cm_pos
# 1.000000
# 1.000000
# 1.000000

#-STD-> cpu time:      0.006 s
#-STD-> wall time:      0.001 s
#-STD-> vecinos actualizados: 1 veces
